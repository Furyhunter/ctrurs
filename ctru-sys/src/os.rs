/* automatically generated by rust-bindgen */

#![allow(dead_code,
         non_camel_case_types,
         non_upper_case_globals,
         non_snake_case)]
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum MemRegion {
    MEMREGION_ALL = 0,
    MEMREGION_APPLICATION = 1,
    MEMREGION_SYSTEM = 2,
    MEMREGION_BASE = 3,
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct OS_VersionBin {
    pub build: u8_,
    pub minor: u8_,
    pub mainver: u8_,
    pub reserved_x3: u8_,
    pub region: ::libc::c_char,
    pub reserved_x5: [u8_; 3usize],
}
impl ::core::default::Default for OS_VersionBin {
    fn default() -> Self { unsafe { ::core::mem::zeroed() } }
}
extern "C" {
    pub fn osConvertVirtToPhys(vaddr: *const ::libc::c_void) -> u32_;
    pub fn osConvertOldLINEARMemToNew(vaddr: *const ::libc::c_void)
     -> *mut ::libc::c_void;
    pub fn osStrError(error: u32_) -> *const ::libc::c_char;
    pub fn osGetMemRegionUsed(region: MemRegion) -> s64;
    pub fn osGetTime() -> u64_;
    pub fn osSetSpeedupEnable(enable: u8);
    pub fn osGetSystemVersionData(nver_versionbin: *mut OS_VersionBin,
                                  cver_versionbin: *mut OS_VersionBin)
     -> Result;
    pub fn osGetSystemVersionDataString(nver_versionbin: *mut OS_VersionBin,
                                        cver_versionbin: *mut OS_VersionBin,
                                        sysverstr: *mut ::libc::c_char,
                                        sysverstr_maxsize: u32_) -> Result;
}

use ::types::*;
